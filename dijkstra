#include<stdio.h>

void dijkstra(int n, int v, int cost[10][10], int dist[10]) {
    int visited[10] = {0}, count = 1, min, u;
    for (int i = 0; i < n; i++) dist[i] = cost[v][i];
    visited[v] = 1, dist[v] = 0;

    while (count++ < n) {
        min = 999;
        for (int i = 0; i < n; i++) 
            if (!visited[i] && dist[i] < min) min = dist[i], u = i;
        visited[u] = 1;
        for (int i = 0; i < n; i++) 
            if (!visited[i] && dist[u] + cost[u][i] < dist[i]) 
                dist[i] = dist[u] + cost[u][i];
    }
}

int main() {
    int n, v, cost[10][10], dist[10];
    printf("Vertices: "); scanf("%d", &n);
    printf("Cost matrix (999 for ∞):\n");
    for (int i = 0; i < n; i++) 
        for (int j = 0; j < n; j++) scanf("%d", &cost[i][j]);
    printf("Source: "); scanf("%d", &v);
    dijkstra(n, v, cost, dist);
    for (int i = 0; i < n; i++) 
        if (i != v) printf("%d -> %d = %d\n", v, i, dist[i]);
    return 0;
}
